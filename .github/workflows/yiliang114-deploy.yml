# name: yiliang114/deploy

# on:
#   push:
#     branches:
#       - yiliang114/deploy

# jobs:
#   main:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         node-version: [16]
#         os: [ubuntu-latest]
#     steps:
#       - uses: actions/checkout@v3
#       - name: Setup Build Environment
#         run: |
#           sudo cp build/azure-pipelines/linux/xvfb.init /etc/init.d/xvfb
#           sudo chmod +x /etc/init.d/xvfb
#           sudo update-rc.d xvfb defaults
#           sudo service xvfb start

#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}

#       - name: Compute node modules cache key
#         id: nodeModulesCacheKey
#         run: echo "value=$(node build/azure-pipelines/common/computeNodeModulesCacheKey.js)" >> $GITHUB_OUTPUT
#       - name: Cache node modules
#         id: cacheNodeModules
#         uses: actions/cache@v3
#         with:
#           path: "**/node_modules"
#           key: ${{ runner.os }}-cacheNodeModulesLinux-${{ steps.nodeModulesCacheKey.outputs.value }}
#       - name: Get yarn cache directory path
#         id: yarnCacheDirPath
#         if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
#         run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
#       - name: Cache yarn directory
#         if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
#         uses: actions/cache@v3
#         with:
#           path: ${{ steps.yarnCacheDirPath.outputs.dir }}
#           key: ${{ runner.os }}-yarnCacheDir-${{ steps.nodeModulesCacheKey.outputs.value }}
#           restore-keys: ${{ runner.os }}-yarnCacheDir-
#       - name: Execute yarn
#         if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
#         env:
#           PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
#           ELECTRON_SKIP_BINARY_DOWNLOAD: 1
#         run: yarn --frozen-lockfile --network-timeout 180000

#       - name: Compile and Download
#         run: yarn npm-run-all --max_old_space_size=4095 -lp compile "electron x64"

#       - name: Run Unit Tests
#         id: electron-unit-tests
#         run: DISPLAY=:10 ./scripts/test.sh

#       - name: Run Integration Tests (Electron)
#         id: electron-integration-tests
#         run: DISPLAY=:10 ./scripts/test-integration.sh
